# Server running port
server.port=8080

# front-end authorization key
app.auth-secret-key=

# OpenAI API Key - https://platform.openai.com/overview
app.openai-api-key=
app.openai-api-base-url=https://api.openai.com
# gpt-4, gpt-4-0314, gpt-4-32k, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-0301, text-davinci-003, text-davinci-002, code-davinci-002
app.openai-api-mode=gpt-3.5-turbo
# Used to query balance, change this to an `sensitiveId` extracted from the ChatGPT site's `https://platform.openai.com/account/usage`
app.openai-sensitive-id=

# change this to an `accessToken` extracted from the ChatGPT site's `https://chat.openai.com/api/auth/session` response
app.openai-access-token=
# Reverse Proxy - Available on accessToken
app.openai-reverse-api-proxy-url=https://bypass.churchless.tech/api/conversation

app.api-timeout-ms=120000
# Maximum number of requests per hour, 0 - unlimited
app.max-request-per-hour=0

# socks proxy
app.socks-proxy.host=
app.socks-proxy.port=
app.socks-proxy.username=
app.socks-proxy.password=

# http proxy
app.http-proxy.host=
app.http-proxy.port=

# SSL Cert
#server.ssl.key-store-type=PKCS12
# If is running in docker, you only need to upload the cert to the `~/chatgpt-web-java` directory,
# and then modify the last `example.com.pfx` to the certificate file name you just uploaded
#server.ssl.key-store=file:/app/config/example.com.pfx
#server.ssl.key-store-password=cert_password

# cors host, e.g. "https://*.a1.com, https://*.a2.com", "*"
app.cors-allowed-origin=*